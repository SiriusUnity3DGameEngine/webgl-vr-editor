class DataArray {
  var _bytes Uint8Array = null
  var _floats Float32Array = null
  var _count = 0

  def isEmpty bool {
    return _count == 0
  }

  def count int {
    return _count
  }

  def bytes Uint8Array {
    return _bytes.subarray(0, _count)
  }

  def clear {
    _count = 0
  }

  def appendFloat(value double) DataArray {
    _grow(4)
    _floats[_count >> 2] = value
    _count += 4
    return self
  }

  def appendColor(color Color) DataArray {
    _grow(4)
    _bytes[_count] = color.red
    _bytes[_count + 1] = color.green
    _bytes[_count + 2] = color.blue
    _bytes[_count + 3] = color.alpha
    _count += 4
    return self
  }

  def _grow(amount int) {
    if _bytes == null || _count + amount > _bytes.length {
      var floats = Float32Array.new((_count + amount) * 2)
      var bytes = Uint8Array.new(floats.buffer)
      if _bytes != null { bytes.set(_bytes) }
      _floats = floats
      _bytes = bytes
    }
  }
}
