const GLSLX_SOURCE_MASK_VERTEX = "precision highp float;uniform float p;attribute vec3 d;varying float b;void main(){b=d.z,gl_Position=vec4(d.x*p,d.y,0,1);}"
const GLSLX_SOURCE_MASK_FRAGMENT = "precision highp float;varying float b;void main(){gl_FragColor=vec4(b);}"
const GLSLX_SOURCE_DEPTH_VERTEX = "precision highp float;uniform mat4 f;attribute vec3 d;varying float b;void main(){b=(gl_Position=f*vec4(d,1)).z*.5+.5;}"
const GLSLX_SOURCE_DEPTH_FRAGMENT = "precision highp float;varying float b;void main(){gl_FragColor=vec4(b);}"
const GLSLX_SOURCE_SHADOW_VERTEX = "precision highp float;uniform mat4 f;uniform vec3 A;attribute vec3 B,d;attribute vec4 C,j;varying float b;varying vec3 r;varying vec4 u;vec2 g(vec4 a){return a.xz*.996109+a.yw*.003891;}void main(){u=C,b=sqrt(max(0.,dot(A,B))),r=(f*vec4(d,1)).xyz*.5+.5,gl_Position=vec4(g(j)*2.-1.,0,1);}"
const GLSLX_SOURCE_SHADOW_FRAGMENT = "precision highp float;uniform sampler2D s;varying float b;varying vec3 r;varying vec4 u;void main(){float a=texture2D(s,r.xy).x;gl_FragColor=vec4(u.xyz*(b*float(a+.007843>r.z)),1);}"
const GLSLX_SOURCE_WORLD_VERTEX = "precision highp float;uniform mat4 f,x;uniform vec4 l;attribute vec3 d;attribute vec4 k,j,t;varying float b;varying vec2 m,i;vec2 g(vec4 a){return a.xz*.996109+a.yw*.003891;}vec4 v(){vec3 a=d+k.xyz-.5;return x*f*vec4(mix(d,a,clamp(dot(l.xyz,a)-l.w,0.,1.)),1);}void main(){b=k.w,i=g(t),m=g(j),gl_Position=v();}"
const GLSLX_SOURCE_WORLD_VERTEX_DISTORTED = "precision highp float;uniform mat4 f,x;uniform float p;uniform vec4 l,o,n,h,q;attribute vec3 d;attribute vec4 k,j,t;varying float b;varying vec2 m,i;vec2 g(vec4 a){return a.xz*.996109+a.yw*.003891;}vec4 v(){vec3 a=d+k.xyz-.5;return x*f*vec4(mix(d,a,clamp(dot(l.xyz,a)-l.w,0.,1.)),1);}void main(){vec4 a=v();float c=abs(a.w),y=mix(n.x,n.z,(.5+a.x/c*.5*p-q.x)/q.z),w=mix(n.w,n.y,(.5+a.y/c*.5-q.y)/q.w),e=y*y+w*w,z=1.+e*(o.x+e*(o.y+e*(o.z+e*o.w)));a.x=((y*z-h.x)/(h.z-h.x)*2.-1.)*c*p,a.y=((w*z-h.w)/(h.y-h.w)*2.-1.)*c,b=k.w,i=g(t),m=g(j),gl_Position=a;}"
const GLSLX_SOURCE_WORLD_FRAGMENT = "precision highp float;uniform sampler2D D,s;varying float b;varying vec2 m,i;void main(){gl_FragColor=texture2D(D,m)*(b*(1.-.1*float(texture2D(s,i).x>.5)));}"

const GLSLX_NAME_POSITION3 = "d"
const GLSLX_NAME_MATRIX_MODELVIEW = "f"
const GLSLX_NAME_NO_LENS_FRUSTUM = "h"
const GLSLX_NAME_LIGHTMAP4 = "j"
const GLSLX_NAME_CENTER4 = "k"
const GLSLX_NAME_EYE = "l"
const GLSLX_NAME_LENS_FRUSTUM = "n"
const GLSLX_NAME_INVERSE_DISTORTION = "o"
const GLSLX_NAME_FLIP = "p"
const GLSLX_NAME_VIEWPORT = "q"
const GLSLX_NAME_TEXTURE = "s"
const GLSLX_NAME_TEXTURE4 = "t"
const GLSLX_NAME_MATRIX_PROJECTION = "x"
const GLSLX_NAME_LIGHT = "A"
const GLSLX_NAME_NORMAL3 = "B"
const GLSLX_NAME_COLOR4 = "C"
const GLSLX_NAME_LIGHTMAP = "D"
